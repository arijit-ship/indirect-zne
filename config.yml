# Run configurations: Choose from 'vqe', 'redundant', and 'zne'.
run: "zne"

# System configuration
nqubits: 4
# State options: 'dmatrix' and 'statevector'
state: "dmatrix"

# Output configuration
output:
  file_name_prefix: "test_experiment"
  draw:
    status: False
    fig_dpi: 100
    type: "png"

# Target Hamiltonian configuration
observable:
  # Definition options: 'custom', 'ising', or 'heisenberg'.
  # 'custom' and 'ising' are created using a Hamiltonian with terms XZ-Z (this is NOT any standard familier XY model, we call it 'Fancy XY-model Hamiltonian').
  def: "ising"

  # WARNING: Coefficients can be overwritten:
  # 'custom': Not overwritten.
  # 'ising': cn, bn, r are overwritten to [0.5], [1], 1.
  # 'heisenberg': Only cn is used (will NOT be overwritten); bn and r are not used.
  coefficients:
    cn: [0.5, 0.5, 0.5]
    bn: [1.0, 1.0, 1.0, 1.0]
    r: 1

# Circuit configuration
ansatz:
  layer: 10
  gateset: 1
  ugate:
    # Type options: 'custom', 'xy-iss', 'ising', and 'heisenberg'.
    # 'custom' and 'ising' are created using a Hamiltonian with terms XZ-Z (this is NOT any standard familier XY model, we call it 'Fancy XY-model Hamiltonian').
    type: "xy-iss"
    # WARNING: For ZNE redundant circuit, the ansatz type must be 'xy-iss' (stands for XY identity-scaling-supported).
    
    coefficients:
    # WARNING: Coefficients can be overwritten:
    # 'custom': Not overwritten.
    # 'xy-iss': cn, bn, r are overwritten to [0.5], [0], 0.
    # 'ising': cn, bn, r are overwritten to [0.5], [1], 1.
    # 'heisenberg': Only cn is used (will NOT be overwritten); bn and r are not used.
      cn: [0.5, 0.5, 0.5]
      bn: [0, 0, 0, 0]
      r: 0
    time:
      min: 0.0
      max: 10.0

# Noise configuration
noise_profile:
  status: True
  type: "depolarizing" # Choose from 'depolarizing', 'bitflip', 'dephasing', or 'xznoise'.
  noise_prob: [0.01, 0.01, 0, 0] # Noise probabilities for [r, cz, u, y] gates.
  noise_on_init_param:
    # Adds noise to the initial parameters.
    status: False
    value: 0.01

# Variational Quantum Eigensolver (VQE) configuration
vqe:
  iteration: 2
  # Optimization configuration
  optimization:
    status: True
    algorithm: "SLSQP"
    constraint: False

# Initial parameters for the ansatz.
init_param:
  # Parameter value: "random" or "List[floats]".
  value: [0.7245111567433844, 4.886154569574665, 8.44132039383773, 5.722131012127867, 6.880306552724382, 5.503402715587027, 6.232729870827599, 7.021532029570259, 10.053991464795828, 12.267650927359233, 0.07128099473955767, 0.9950134525965727, 0.23731981503780095, 0.5023847591613018, 1.3320142767602734, 0.24427840536741063, -0.5629935889000458, -1.2517175887232441, -0.6316226090932828, 1.912004104039342, -0.1894543814149101, 0.47536659825972366, -0.7759567139754102, -0.7332103047647472, 1.2717499134483001, 1.9599839768072334, 1.2394997534295376, 0.9294619460471184, -0.6020466588589217, 0.9064293208716617, -0.5123840297579438, 0.3861960194263798, 1.7921926686218763, 0.3036829999543118, 1.9739441679287535, 0.9994152231074109, 0.9436607365612361, 0.943545108745157, 0.3029918419386194, 0.5252378740024977, 1.424792047925942, -1.6748327242948422, 2.8198809671637184, 0.9671023361207446, -0.5862577863724538, -1.5726331940307536, 2.2601731598687445, -1.0454648120669623, 1.2092764891126242, 0.5229864791281706]

# Redundant circuit configuration
redundant:
  # Identity factors for r, U, Y, and CZ gates
  # WARNING: Identity scaling for the U gate is only possible if vqe.ansatz.type is 'xy-iss'. For other types, the identity factor for the U gate must be set to 0.
  identity_factors: [[1, 0, 0, 0], [1, 1, 0, 0], [1, 1, 1, 1]]

# Zero noise extrapolation (ZNE) configuration
zne:
  # Method options: 'linear', 'polynomial', 'richardson', or 'richardson-mul'.
  # 'linear' and 'polynomial' use scikit-learn for regression.
  method: "richardson"

  # Degree is only applicable for 'polynomial' and 'richardson-mul'. For 'richardson', degree is computed based on the number of data points.
  degree: 1

  # Sampling method options: 'default', 'default-N', or 'random-N', where N is an integer.
  # 'default' - samples all points.
  # 'default-N' - samples the first N points.
  # 'random-N' - samples N points randomly.
  sampling: "default"

  # Data points for extrapolation
  data_points:  [[12, 0, 0, 2, -2.0256163235421045], [12, 0, 0, 2, -2.025616323542089], [12, 0, 0, 6, -1.7756086802514262]]
    